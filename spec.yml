openapi: "3.0.0"
info:
  description: "This is the API definition for the mailsaviour service."
  version: "1.0.0"
  title: "Mailsaviour"
  contact:
    email: "leonard@marschke.me"
servers:
  - url: "https://someserver/v1"

paths:
  /health:
    get:
      summary: Gets service health
      responses:
        200:
          description: Service operational
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        503:
          description: Service not operational
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        default:
          $ref: '#/components/responses/Error'

  /mailstore:
    get:
      summary: Get saved mails
      description: To get filtered results you can specify query parameters, which get concatenated by AND
      parameters:
        - name: id
          in: query
          description: Filter for id
          schema:
            type: string
            description: Id generated by POST
        - name: received_before
          in: query
          description: Filter for received date
          schema:
            $ref: '#/components/schemas/Mail/properties/received'
        - name: received_after
          in: query
          description: Filter for received date
          schema:
            $ref: '#/components/schemas/Mail/properties/received'
        - name: mail_from
          in: query
          description: Filter for mail sender
          schema:
            $ref: '#/components/schemas/Mail/properties/mail_from'
        - name: rcpt_to
          in: query
          description: Filter for mail receipient
          schema:
            $ref: '#/components/schemas/Mail/properties/rcpt_to/items'
        - name: limit
          in: query
          description: Limits the response size
          schema:
            type: integer
            minimum: 1
            description: Maximal number of mails
      responses:
        200:
          description: Mail content
          content:
            application/json:
              schema:
                type: object
                properties:
                  mail_list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          $ref: '#/components/schemas/MailId'
                        content:
                          $ref: '#/components/schemas/Mail'

        400:
          $ref: '#/components/responses/InvalidArgument'
        404:
          $ref: '#/components/responses/NotFound'
        422:
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Save a new mail
      requestBody:
        description: "Mail content"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mail'
      responses:
        200:
          description: Mail successfully saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/MailId'
        400:
          $ref: '#/components/responses/InvalidArgument'
        422:
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Error'



components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          description: Current status of the service
        message:
          type: string
          description: Explaining the current status
    Error:
      type: object
      properties:
        message:
          type: string
          description: the error message
    Mail:
      type: object
      properties:
        received:
          type: string
          format: datetime
          description: Time in ISO 8601 format
          example: "2007-08-31T16:47+00:00"
        received_from:
          type: string
          description: Server mail received from
          example: mail.marschke.me
        received_by:
          type: string
          description: Server mail received by
          example: localhost
        mail_from:
          type: string
          format: mail
          description: Origin mail address
          example: leonard@marschke.me
        rcpt_to:
          type: array
          items:
            type: string
            format: mail
            description: Rcpt mail address
            example: leonard@localhost
        data:
          type: string
          maxLength: 20971520
          description: Mail content encoded in ASCII chars, max 20 MiB
          example: "SRE ist das geilste Seminar ewa!!!"
    MailId:
      type: string
      description: Mail id

  responses:
    Error:
      description: Unknown Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidArgument:
      description: Invalid argument passed, see message field for more information.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: Request was unable to be completed, due to semantic errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
